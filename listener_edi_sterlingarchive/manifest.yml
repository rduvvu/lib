apiVersion: v1
kind: Namespace
metadata:
  name: !{namespace}!
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
spec:
  selector:
    matchLabels:
      app: #{LowerCaseRepoNameDash}#
  replicas: 8
  template:
    metadata:
      labels:
        app: #{LowerCaseRepoNameDash}#
    spec:
      serviceAccountName: gcp-edi-sterlingarchive
      imagePullSecrets:
      - name: gar-image-pull
      - name: image-pull-secret
      containers:
        - name: #{LowerCaseRepoNameDash}#
          image: #{DockerRepo}#/#{LowerCaseRepoName}#:#{Build.SourceVersion}#
          resources:
            limits:
              cpu: "600m"
              memory: "1500Mi"
            requests:
              cpu: "300m"
              memory: "1000Mi"
          env:
            - name: DOMAIN_PID
              valueFrom:
                secretKeyRef:
                  name: #{LowerCaseRepoNameDash}#
                  key: domainpid.userid
            - name: DOMAIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: #{LowerCaseRepoNameDash}#
                  key: domainpid.password
            - name: JAVA_OPTS
              value: -Dserver.port=8080 -Dspring.cloud.config.uri=http://!{configServer}!:80/ws_infrastructure_configuration -Druntime.environment=!{deployEnv}! -Dspring.profiles.active=!{springProfile}!
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /listener_edi_sterlingarchive/health
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /listener_edi_sterlingarchive/health
              port: http
            failureThreshold: 12
---
kind: Service
apiVersion: v1
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
  labels:
    app: #{LowerCaseRepoNameDash}#
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: web
  selector:
    app: #{LowerCaseRepoNameDash}#
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
spec:
  rules:
    - host: !{namespace}!.jbhunt.com
      http:
        paths:
          - path: /listener_edi_sterlingarchive
            pathType: Prefix
            backend:
              service:
                name: #{LowerCaseRepoNameDash}#
                port:
                  number: 8080
    - host: !{aliasEnv}!.jbhunt.com
      http:
        paths:
          - path: /listener_edi_sterlingarchive
            pathType: Prefix
            backend:
              service:
                name: #{LowerCaseRepoNameDash}#
                port:
                  number: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    prometheus: kube-prometheus
  name: #{LowerCaseRepoNameDash}#
  namespace: monitoring
spec:
  endpoints:
    - port: web
      interval: 10s
      path: /listener_edi_sterlingarchive/prometheus
  selector:
    matchLabels:
      app: #{LowerCaseRepoNameDash}#
  namespaceSelector:
    matchNames:
      - !{namespace}!
---
kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v2beta1
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: #{LowerCaseRepoNameDash}#
  minReplicas: 4
  maxReplicas: 10
  metrics:
    - type: Pods
      pods:
        metricName: counter_active_requests
        targetAverageValue: 3
---
apiVersion: v1
kind: Secret
metadata:
  namespace: !{namespace}!
  name: #{LowerCaseRepoNameDash}#
data:
  domainpid.userid: !{encodedUserid}!
  domainpid.password: !{piddedi-PrivateKey}!
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: !{gcp-service-account}!
  name: gcp-edi-sterlingarchive
  namespace: !{namespace}!
